---
- name: Ensure hardware virtualisation is supported
  shell:
    cmd: test $(egrep -c '(vmx|svm)' /proc/cpuinfo) -gt 0
- block: # Need privileged operation
  - name: Ensure KVM is installed on Debian hosts
    package:
      name:
        - qemu-kvm
        - libvirt-daemon-system
        - libvirt-clients
        - bridge-utils
        - cpu-checker
    when: ansible_os_family == 'Debian'
    vars:
      qemu_package: "{{ [
        {'os_family': 'Debian', 'package': 'qemu-kvm'},
        {'os_family': 'Archlinux', 'package': 'qemu-full'}
      ]| items2dict(key_name='os_family', value_name='package')}}"
  - name: Ensure KVM is installed on Red Hat hosts
    package: name='@virtualization'
    when: ansible_os_family == 'RedHat'
  - block: # Install KVM and QEMU on Arch Linux hosts
    - name: Ensue QEMU is installed on Arch Linux hosts
      package:
        name:
          - qemu-full
          - libvirt
          - dnsmasq
          - openbsd-netcat
          - virt-manager
          - virt-viewer
          - plocate
    - name: Ensure plocate is enabled and started on Arch Linux hosts with systemd
      service:
        name: plocate-updatedb.timer
        enabled: true
        state: started
      when: ansible_service_mgr == 'systemd'
    - name: Ensure updatedb daily runs on Arch Linux hosts without systemd
      cron:
        name: daily update locate database
        job: updatedb
        minute: "5"
        hour: "0"
      when: ansible_service_mgr != 'systemd'
    - name: Ensure locate database is updated on Arch Linux
      command: updatedb
    when: "ansible_os_family in ['Archlinux', 'Artix Linux']"
  - name: Ensure users are added to kvm and libvirt groups
    user:
      name: "{{ item }}"
      append: true
      groups: kvm, libvirt
    with_items: "{{ kvm_users }}"
  - name: Ensure `locate` command in installed on Debian
    package: name=locate
    when: ansible_os_family == 'Debian'
  - name: Ensure `kvmctl.sh` tool is installed
    copy:
      src: kvmctl.sh
      dest: /usr/local/bin/kvmctl.sh
      mode: 0755
  become: true
